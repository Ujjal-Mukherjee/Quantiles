plot(p~temp1, type="l")
points(failprop~Challeng$temp)
summary(m1 <- glm(cbind(surv, m - surv) ~
class + age + sex,
binomial, data=Whitestar))
anova(m1)
m2 <- update(m1, ~(class + age + sex)^2)
Anova(m2)
Anova(m1)
Anova(m2)
m3 <- update(m2, ~ . - age:sex)
plot(allEffects(m3), rescale.axis=FALSE, grid=TRUE,
multiline=TRUE, ci.style="bars")
?effect
plot(Effect("age", m3), rescale.axis=FALSE, grid=TRUE,
multiline=TRUE, ci.style="bars")
plot(Effect(c("age", "sex"), m3),
rescale.axis=FALSE, grid=TRUE,
multiline=TRUE, ci.style="bars")
?confint
?qqline
k=matrix(c(1,1,'a','a'),2,2)
k
?predict.glm
?confint
?Anova
library(alr4)
library(faraway)
names(wbcd)
data(wbcd)
data(wbca)
names(wbca)
lmod1 = glm(Class~., data=wbca, family=binomial)
summary(lmod1)
(lmod.summary = summary(lmod1))
names(lmod.summary)
with(lmod.summary, cbind(df.residual, deviance.resid))
lmod.summary$df.residual
lmod.summary$deviance.resid
names(lmod.summary)
lmod.summary$null.deviance
lmod.summary$deviance
with(lmod.summary, 1-pchisq(null.deviance-deviance, df=df.null-df))
with(lmod.summary, null.deviance-deviance)
with(lmod.summary, df.null-df)
lmod.summary$df.null
lmod.summary$df
lmod.summary$df.residual
with(lmod.summary, 1-pchisq(null.deviance-deviance, df=df.null-df.residual))
with(lmod.summary, 1-deviance/null.deviance)
(lmod2 = step(lmod1))
(lmod2 = step(lmod1), trace=F)
(lmod2 = step(lmod1, trace=F))
dim(wbca)
newdata = c(1,1,3,2,1,1,4,1,1)
newdata = data.frame(newdata)
newdata
newdata = data.frame(t(newdata), colnames=colnames(wbca))
?data.frame
newdata = data.frame(t(newdata))
colnames(newdata) = colnames(wbca)
newdata
newdata = c(1,1,3,2,1,1,4,1,1)
newdata = data.frame(t(newdata))
colnames(newdata) = colnames(wbca)
newdata = c(1,1,3,2,1,1,4,1,1)
newdata = data.frame(t(newdata))
colnames(newdata) = colnames(wbca)[-1]
newd
newdata
?predict.glm
predict(lmod2, newdata=newdata, se.fit=TRUE)
cI = with(p, c(fit-1.96*se.fit, fit+1.96*se.fit)
(CI = with(p, c(fit-1.96*se.fit, fit, fit+1.96*se.fit))
(CI = with(p, c(fit-1.96*se.fit, fit, fit+1.96*se.fit)))
p = predict(lmod2, newdata=newdata, se.fit=TRUE)
(CI = with(p, c(fit-1.96*se.fit, fit, fit+1.96*se.fit)))
p = predict(lmod2, newdata=newdata, se.fit=TRUE)
(CI = with(p, c(fit-1.96*se.fit, fit, fit+1.96*se.fit)))
colnames(CI) = c("lwr", "fit","upr")
fullpred = predict(lmod2, newdata=wbca)
pred5 = ifelse(fullpred>.5, 1, 0)
sum(pred5!=wbca$Class)
table(pred5, wbca$Class)
pred9 = ifelse(fullpred>.9, 1, 0)
sum(pred9!=wbca$Class)
table(pred9, wbca$Class)
test = seq(3, nrow(wbca), by=3)
test
lmod21 = update(lmod2, subset=-test)
fullpred1 = predict(lmod21, newdata=wbca[test])
fullpred1 = predict(lmod21, newdata=wbca[test,])
pred51 = ifelse(fullpred>.5, 1, 0)
sum(pred51!=wbca$Class[test])
table(pred51, wbca$Class[test])
pred51 = ifelse(fullpred1>.5, 1, 0)
sum(pred51!=wbca$Class[test])
table(pred51, wbca$Class[test])
pred91 = ifelse(fullpred1>.9, 1, 0)
sum(pred91!=wbca$Class[test])
table(pred91, wbca$Class[test])
names(pima)
summary(pima)
plot(pima[-end,])
plot(pima[-nrow(pima),])
dim(pima)
plot(pima[-ncol(pima),])
plot(pima[,-ncol(pima)])
pima$logInsulin = log(pima$insulin)
summary(pima)
pima$logInsulin = log(pima$insulin+1)
summary(pima)
lmod.pima = glm(test~pregnant+glucose+diastolic+triceps+logInsulin+bmi+diabetes+age,
data=pima,
family=binomial)
summary(lmod.pima)
bmidiff = with(pima, quantile(bmi, .75) - quantile(bmi, .25))
bmidiff
(diff.bmi = with(pima, quantile(bmi, .75) - quantile(bmi, .25)))
(diff.logodd = 0.087*diff.bmi)
(diff.odd = exp(diff.logodd))
(se.logodd = 0.015*diff.bmi)
(CI.logodd = c(diff.logodd-1.96*se.logodd, diff.logodd, diff.logodd+1.96*se.logodd))
CI.odd = exp(CI.logodd)
(CI.odd = exp(CI.logodd))
par(mfrow=c(2,2))
plot(lmod.pima)
par(mfrow=c(1,1))
summary(pima)
plot(pima[,-ncol(pima)])
lmod.pima = glm(test~pregnant+glucose+diastolic+triceps+log(insulin+1)+bmi+diabetes+age,
data=pima,
family=binomial)
summary(lmod.pima)
(diff.bmi = with(pima, quantile(bmi, .75) - quantile(bmi, .25)))
(diff.logodd = 0.087*diff.bmi)
(se.logodd = 0.015*diff.bmi)
(CI.logodd = c(diff.logodd-1.96*se.logodd, diff.logodd, diff.logodd+1.96*se.logodd))
(CI.odd = exp(CI.logodd))
# Part d
summary(lmod.pima)
# Part e
par(mfrow=c(2,2))
plot(lmod.pima)
par(mfrow=c(1,1))
# Part f
newpima = data.frame(t(c(1, 99, 64, 22, 76, 27, .25, 25)))
colnames(newpima) = colnames(pima)[-ncol(newpima)]
colnames(newpima) = colnames(pima)[-ncol(pima)]
ncol(pima)
colnames(pima)
detach(faraway)
library("faraway", lib.loc="C:/Study/R/R-3.1.1/library")
detach("package:faraway", unload=TRUE)
library(faraway)
summary(pima)
rm(pima)
summary(pima)
plot(pima[,-ncol(pima)])
# scale irregularity in insulin
# Part b
lmod.pima = glm(test~pregnant+glucose+diastolic+triceps+log(insulin+1)+bmi+diabetes+age,
data=pima,
family=binomial)
summary(lmod.pima)
# Part c
(diff.bmi = with(pima, quantile(bmi, .75) - quantile(bmi, .25)))
(diff.logodd = 0.087*diff.bmi)
(se.logodd = 0.015*diff.bmi)
(CI.logodd = c(diff.logodd-1.96*se.logodd, diff.logodd, diff.logodd+1.96*se.logodd))
(CI.odd = exp(CI.logodd))
# Part d
summary(lmod.pima)
# Part e
par(mfrow=c(2,2))
plot(lmod.pima)
par(mfrow=c(1,1))
# Part f
newpima = data.frame(t(c(1, 99, 64, 22, 76, 27, .25, 25)))
colnames(newpima) = colnames(pima)[-ncol(pima)]
predict(lmod.pima, newdata=newpima)
?predict.glm
library(faraway)
## Faraway Ch2 Prob 2
names(wbca)
# Part a
lmod1 = glm(Class~., data=wbca, family=binomial)
(lmod.summary = summary(lmod1))
names(lmod.summary)
lmod.summary$df.residual
lmod.summary$deviance
# test for significance
with(lmod.summary, 1-pchisq(null.deviance-deviance, df=df.null-df.residual))
# pseudo R^2
with(lmod.summary, 1-deviance/null.deviance)
# Part b
(lmod2 = step(lmod1, trace=F))
# Part c
# make new data frame
newdata = c(1,1,3,2,1,1,4,1,1)
newdata = data.frame(t(newdata))
colnames(newdata) = colnames(wbca)[-1]
p = predict(lmod2, newdata=newdata, se.fit=TRUE)
(CI = with(p, c(fit-1.96*se.fit, fit, fit+1.96*se.fit)))
p
(CI = with(p, c(fit-1.96*se.fit, fit, fit+1.96*se.fit)))
predict(lmod2, newdata=newdata, interval="predict")
p.pima = predict(lmod.pima, newdata=newpima, se.fit=TRUE)
(CI.pima = with(p.pima, c(fit-1.96*se.fit, fit, fit+1.96*se.fit)))
lmod.pima$family$linkinv(CI.pima)
lmod2$family$linkinv(CI)
dim(pima)
which(pima$insulin==0)
length(which(pima$insulin==0))
length(which(pima$triceps==0))
ind = with(pima, which(insulin==0 | triceps==0))
length(ind)
ind = with(pima, which(insulin==0 & triceps==0))
length(ind)
ind = with(pima, which(insulin==0 & triceps!=0))
length(ind)
ind = with(pima, which(insulin!=0 & triceps==0))
length(ind)
ind = with(pima, which(insulin==0 | triceps==0))
summary(pima)
plot(pima[,-ncol(pima)])
# drop insulin=0 or triceps=0 cases
ind = with(pima, which(insulin==0 | triceps==0))
lmod.pima = glm(test~pregnant+glucose+diastolic+triceps+insulin+bmi+diabetes+age,
data=pima, subset=-ind,
family=binomial)
summary(lmod.pima)
(diff.bmi = with(pima, quantile(bmi, .75) - quantile(bmi, .25)))
(diff.logodd = 0.087*diff.bmi)
(se.logodd = 0.015*diff.bmi)
(CI.logodd = c(diff.logodd-1.96*se.logodd, diff.logodd, diff.logodd+1.96*se.logodd))
(CI.odd = exp(CI.logodd))
summary(lmod.pima)
par(mfrow=c(2,2))
plot(lmod.pima)
par(mfrow=c(1,1))
newpima = data.frame(t(c(1, 99, 64, 22, 76, 27, .25, 25)))
colnames(newpima) = colnames(pima)[-ncol(pima)]
p.pima = predict(lmod.pima, newdata=newpima, se.fit=TRUE)
(CI.pima = with(p.pima, c(fit-1.96*se.fit, fit, fit+1.96*se.fit)))
lmod.pima$family$linkinv(CI.pima)
library(faraway)
lmod1 = glm(Class~., data=wbca, family=binomial)
(lmod2 = step(lmod1, trace=F))
newdata = c(1,1,3,2,1,1,4,1,1)
newdata = data.frame(t(newdata))
colnames(newdata) = colnames(wbca)[-1]
p = predict(lmod2, newdata=newdata, se.fit=TRUE)
*
p
(CI = with(p, c(fit-1.96*se.fit, fit, fit+1.96*se.fit)))
lmod2$family
lmod2$family$linkinv
lmod2$family$linkinv(CI)
(lmod.summary = summary(lmod1))
names(lmod.summary)
lmod.summary$df.residual
lmod.summary$deviance
lmod.summary$df.null
lmod.summary$null.deviance
with(lmod.summary,
1-pchisq(null.deviance-deviance,
df=df.null-df.residual))
Anova(lmod1)
require(car)
Anova(lmod1)
names(lmod.summary)
newdata = c(1,1,3,2,1,1,4,1,1)
newdata
newdata = data.frame(t(newdata))
newdata = c(1,1,3,2,1,1,4,1,1)
newdata = data.frame((newdata))
newdata
newdata = c(1,1,3,2,1,1,4,1,1)
newdata = data.frame(t(newdata))
newdata
colnames(wbca)
colnames(newdata) = colnames(wbca)[-1]
newdata
p = predict(lmod2, newdata=newdata, se.fit=TRUE)
(CI = with(p, c(fit-1.96*se.fit, fit, fit+1.96*se.fit)))
lmod2$family$linkinv(CI)
fullpred = predict(lmod2, newdata=wbca)
lmod2$fitted
View(cbind(fullpred,lmod2$fitted))
fullpred = predict(lmod2, newdata=wbca,
type="response")
fullpred = predict(lmod2, newdata=wbca,
View(cbind(fullpred,lmod2$fitted))
pred5 = ifelse(fullpred>.5, 1, 0)
pred5!=wbca$Class
sum(pred5!=wbca$Class)
table(pred5, wbca$Class)
pred9 = ifelse(fullpred>.9, 1, 0)
sum(pred9!=wbca$Class)
table(pred9, wbca$Class)
test = seq(3, nrow(wbca), by=3)
lmod21 = update(lmod2, subset = -test)
fullpred1 = predict(lmod21, newdata=wbca[test,],
type="response")
pred51 = ifelse(fullpred1>.5, 1, 0)
sum(pred51!=wbca$Class[test])
table(pred51, wbca$Class[test])
pred91 = ifelse(fullpred1>.9, 1, 0)
sum(pred91!=wbca$Class[test])
table(pred91, wbca$Class[test])
names(pima)
summary(pima)
sum(pima$insulin==0)
sum(pima$triceps==0)
ind = with(pima, which(insulin==0 | triceps==0))
lmod.pima = glm(test~pregnant+glucose+diastolic+triceps+insulin+bmi+diabetes+age,
data=pima, subset=-ind,
family=binomial)
summary(lmod.pima)
lmod.pima = glm(test~pregnant+glucose+diastolic+triceps+insulin+bmi+diabetes+age,
data=pima, subset=-ind,
family=binomial)
summary(lmod.pima)
(diff.bmi = with(pima,
quantile(bmi, .75) - quantile(bmi, .25)))
(diff.logodd = 0.087*diff.bmi)
(se.logodd = 0.015*diff.bmi)
(CI.logodd = c(diff.logodd-1.96*se.logodd, diff.logodd, diff.logodd+1.96*se.logodd))
(CI.odd = exp(CI.logodd))
par(mfrow=c(2,2))
plot(lmod.pima)
par(mfrow=c(1,1))
newpima = data.frame(t(c(1, 99, 64, 22, 76, 27, .25, 25)))
colnames(pima)
colnames(newpima) = colnames(pima)[-ncol(pima)]
newpima
p.pima = predict(lmod.pima, newdata=newpima, se.fit=TRUE)
(CI.pima = with(p.pima, c(fit-1.96*se.fit, fit, fit+1.96*se.fit)))
lmod.pima$family$linkinv(CI.pima)
library(faraway)
names(discoveries)
View(discoveries)
?residualPlot
library(alr4)
?residualPlot
library(faraway)
discoveries
discoveries$year = 1860:1959
1:5
dim(discoveries)
length(discoveries)
discoveries = data.frame(discoveries)
discoveries$year = 1860:1959
m1.pois = glm(x~year, family=poisson, data=discoveries)
names(discoveries)
View(discoveries)
library("faraway", lib.loc="C:/Study/R/R-3.1.1/library")
detach("package:faraway", unload=TRUE)
library(faraway)
discoveries1 = data.frame(discoveries)
discoveries1$year = 1860:1959
m1.pois = glm(x~year, family=poisson, data=discoveries1)
discoveries1 = data.frame(discoveries)
View(discoveries1)
View(discoveries)
dim(discoveries)
library(faraway)
plot.ts(discoveries)
names(discoveries)
n = as.numeric(discoveries)
discoveries1 = data.frame(n)
discoveries1$year = 1860:1959
discoveries1
m1.pois = glm(n~year, family=poisson, data=discoveries1)
summary(m1.pois)
m1.pois = glm(n~poly(year,2), family=poisson, data=discoveries1)
summary(m1.pois)
m1.pois = glm(n~poly(year,3), family=poisson, data=discoveries1)
summary(m1.pois)
m1.pois = glm(n~poly(year,2), family=poisson, data=discoveries1)
(dp <- sum(residuals(m1.pois,type="pearson")^2)/m1.pois$df.res)
plot(m1.pois)
require(car)
halfnorm(residuals(m1.pois))
outlierTest(m1.pois)
m11.pois = update(m1.pois, subset=-26)
summary(m11.pois)
head(salmonella)
m2.pois = glm(colonies~dose, family=poisson, data=salmonella)
summary(m2.pois)
(dp <- sum(residuals(m2.pois,type="pearson")^2)/m2.pois$df.res)
summary(m2.pois, dispersion=dp)
require(AER)
?dispersiontest
dispersiontest(m2.pois)
dispersiontest(m2.pois, alternative="two.sided")
require(MASS)
m2.nb = glm.nb(colonies~dose, data=salmonella)
summary(m21.pois)
m2.nb = glm.nb(colonies~dose, data=salmonella)
summary(m2.nb)
odTest(m2.nb)
require(pscl)
odTest(m2.nb)
?odTest
head(esdcomp)
m3.pois = glm(complaints~visits+
residency+gender+revenue+hours,
family=poisson,
data=esdcomp)
plot(esdcomp)
summary(esdcomp)
m3.pois = glm(complaints~visits+
residency+gender+revenue+hours,
family=poisson,
data=esdcomp)
summary(m3.pois)
m31.pois = update(m3.pois, ~.-visits+log(visits))
summary(m31.pois)
summary(m31.pois)
Anova(m32.pois)
m32.pois = update(m3.pois, ~.-visits+offset(log(visits)))
summary(m32.pois)
Anova(m32.pois)
dispersiontest(m32.pois)
1-pchisq(deviance(m32.pois), df.residual(m32.pois))
m3.nb = glm.nb(complaints~visits+
residency+gender+revenue+hours,
,data=esdcomp)
1-pchisq(deviance(m3.nb), df.residual(m3.nb))
summary(m3.nb)
m3.nb = glm.nb(complaints~visits+
(residency+gender+revenue+hours)^2,
,data=esdcomp)
summary(m3.nb)
Anova(m3.nb)
m3.nb = glm.nb(complaints~offset(log(visits))+
(residency+gender+revenue+hours),
,data=esdcomp)
1-pchisq(deviance(m3.nb), df.residual(m3.nb))
summary(m3.nb)
m3.nb = glm.nb(complaints~log(visits)+
(residency+gender+revenue+hours),
,data=esdcomp)
summary(m3.nb)
setwd("C:/Study/My projects/Quantiles/Codes/SBM")
rm(list=ls());
library(inline)
library(Rcpp)
library(RcppArmadillo)
library(RcppEigen)
library(fda.usc)
sourceCpp("ProjQuantNew.cpp", verbose=TRUE, rebuild=FALSE);
## function for empirical PQD
EPQD = function(X, xx){
p = ncol(X)
Fuxu.vec = rep(0,100)
for(iu in 1:100){
u = runif(p,-1,1); u = u/sqrt(sum(u^2))
uecdf = ecdf(X%*%u)
Fuxu.vec[iu] = uecdf(xx%*%u)
}
1/(1+max(abs(Fuxu.vec-.5)))
}
## function to compute outlier score
outlier.score = function(X, type, k=NULL){
n = nrow(X)
if(is.null(k)){
k = floor(.1*n)
}
depth.vec = rep(0,n)
knn.vec = rep(0,n)
# calculate distance matrix for full data
dist.mat = as.matrix(dist(X))
# get depth and knn average dist for all data
for(i in 1:n){
if(type==1){
depth.vec[i] = ProjQuantileDepthMod(X[-i,], X[i,], .5)
}
else{
depth.vec[i] = EPQD(X[-i,], X[i,])
}
ik = order(dist.mat[i,])[1:k]
knn.vec[i] = mean(dist.mat[i,ik])
}
return(log(knn.vec/depth.vec))
}
stackloss
par(mfrow=c(2,2))
plot(lm(stack.loss~., data=stackloss))
par(mfrow=c(1,1))
score.vec = outlier.score(stackloss[,-4], type=2)
score.vec = outlier.score(as.matrix(stackloss[,-4]), type=2)
plot(score.vec, pch=19, cex=.5)
abline(h=quantile(score.vec,.9), lty=2, lwd=2)
score.vec = outlier.score(as.matrix(stackloss), type=2)
plot(score.vec, pch=19, cex=.5)
abline(h=quantile(score.vec,.9), lty=2, lwd=2)
score.vec = outlier.score(as.matrix(stackloss), type=1)
plot(score.vec, pch=19, cex=.5)
abline(h=quantile(score.vec,.9), lty=2, lwd=2)
score.vec = outlier.score(as.matrix(stackloss[,-4]), type=1)
plot(score.vec, pch=19, cex=.5)
abline(h=quantile(score.vec,.9), lty=2, lwd=2)
score.vec = outlier.score(as.matrix(stackloss[,-4]), type=2)
plot(score.vec, pch=19, cex=.5)
abline(h=quantile(score.vec,.9), lty=2, lwd=2)
?hbk
install.packages("robustbase")
library("alr4", lib.loc="C:/Study/R/R-3.1.1/library")
detach("package:alr4", unload=TRUE)

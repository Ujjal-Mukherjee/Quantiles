par(mfrow=c(1,1))
x = runif(n)
X = cbind(x, x+rnorm(n, sd=1))
X = scale(X, scale=F)
# PCA before contamination
(p.pure <- princomp(X)); p.pure$loadings
d1 = wEPQD1(X, X, sig=1)
X1 = X
for(i in 1:nrow(X1)){
X1[i,] = X1[i,]/sqrt(sum(X1[i,]^2))
}
Xrank = X1 * (1/d1[,3]-1)
(p.rank = princomp(Xrank)); p.rank$loadings
par(mfrow=c(1,2))
plot(X, pch=19, cex=.5)
plot(Xrank, pch=19, cex=.5)
par(mfrow=c(1,1))
plot(X, pch=19, cex=.5); abline(p.pure$loadings[,1])
x = runif(n)
X = cbind(x, x+rnorm(n, sd=1))
X = scale(X, scale=F)
# PCA before contamination
(p.pure <- princomp(X)); p.pure$loadings
d1 = wEPQD1(X, X, sig=1)
X1 = X
for(i in 1:nrow(X1)){
X1[i,] = X1[i,]/sqrt(sum(X1[i,]^2))
}
Xrank = X1 * (1/d1[,3]-1)
(p.rank = princomp(Xrank)); p.rank$loadings
par(mfrow=c(1,2))
plot(X, pch=19, cex=.5)
abline(p.pure$loadings[,1], col="red", lwd=2, lty=2)
abline(p.pure$loadings[,1], col="red", lwd=2, lty=2)
plot(Xrank, pch=19, cex=.5)
abline(p.rank$loadings[,1], col="red", lwd=2, lty=2)
abline(p.rank$loadings[,1], col="red", lwd=2, lty=2)
par(mfrow=c(1,1))
par(mfrow=c(1,2))
plot(X, pch=19, cex=.5)
abline(p.pure$loadings[,1], col="red", lwd=2, lty=2)
abline(p.pure$loadings[,2], col="red", lwd=2, lty=2)
plot(Xrank, pch=19, cex=.5)
abline(p.rank$loadings[,1], col="red", lwd=2, lty=2)
abline(p.rank$loadings[,2], col="red", lwd=2, lty=2)
par(mfrow=c(1,1))
?abline
n = 1e3
set.seed(120214)
# x = rnorm(n)
# X = cbind(x, 2*x)
# X = scale(X, scale=F)
sig = matrix(c(1,.1,.1,1), nrow=2)
X = my.mvrnorm(n, mu=c(0,0), Sig=sig)
x = runif(n)
X = cbind(x, x+rnorm(n, sd=.001))
X = scale(X, scale=F)
# PCA before contamination
(p.pure <- princomp(X)); p.pure$loadings
d1 = wEPQD1(X, X, sig=1)
X1 = X
for(i in 1:nrow(X1)){
X1[i,] = X1[i,]/sqrt(sum(X1[i,]^2))
}
Xrank = X1 * (1/d1[,3]-1)
(p.rank = princomp(Xrank)); p.rank$loadings
par(mfrow=c(1,2))
plot(X, pch=19, cex=.5)
abline(p.pure$loadings[,1], col="red", lwd=2, lty=2)
abline(p.pure$loadings[,2], col="red", lwd=2, lty=2)
plot(Xrank, pch=19, cex=.5)
abline(p.rank$loadings[,1], col="red", lwd=2, lty=2)
abline(p.rank$loadings[,2], col="red", lwd=2, lty=2)
par(mfrow=c(1,1))
## PQ/ WPQ-based outliers
setwd("C:/Study/My projects/Quantiles/Codes/SBM")
rm(list=ls());
library(inline)
library(Rcpp)
library(RcppArmadillo)
library(RcppEigen)
library(fda.usc)
sourceCpp("ProjQuantNew1.cpp", verbose=TRUE, rebuild=TRUE);
## function to compute outlier score
outlier.score = function(X, type, k=NULL, alpha){
n = nrow(X)
if(is.null(k)){
#k = floor(.1*n)
k = floor(sqrt(n))
}
depth.vec = rep(0,n)
knn.vec = rep(0,n)
# calculate distance matrix for full data
dist.mat = as.matrix(dist(X))
# get depth and knn average dist for all data
for(i in 1:n){
if(type==1){
depth.vec[i] = KernelDepthMod(X[-i,], X[i,], .2)
}
else{
depth.vec[i] = EPQD(X[-i,], X[i,])
}
ik = order(dist.mat[i,])[2:(k+1)]
knn.vec[i] = mean(dist.mat[i,ik])
}
lknn = log(knn.vec)
lhtped = -log(depth.vec)
return(alpha*lknn + (1-alpha)*lhtped)
}
## simulated data
## Setup 1... bivariate normal.. 5% contamination far away
set.seed(11182014)
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+10, ncol=2)
Xa = rbind(X1,X2)
Xa = center(Xa, center=T, scale=F)
Xa = scale(Xa, center=T, scale=F)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xa, type=1, alpha=.05)
score2 = outlier.score(Xa, type=1, alpha=.5)
score3 = outlier.score(Xa, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
par(mfrow=c(1,3))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+sample(c(6:10, -10:-6), 50, replace=T), ncol=2)
label.vec = c(rep("1",475), rep("2", 25))
Xb = rbind(X1,X2)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xb, type=1, alpha=.05)
score2 = outlier.score(Xb, type=1, alpha=.5)
score3 = outlier.score(Xb, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
par(mfrow=c(1,3))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
set.seed(11182014)
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+10, ncol=2)
Xa = rbind(X1,X2)
Xa = scale(Xa, center=T, scale=F)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xa, type=1, alpha=.05)
score2 = outlier.score(Xa, type=1, alpha=.5)
score3 = outlier.score(Xa, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
par(mfrow=c(1,3))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+sample(c(6:10, -10:-6), 50, replace=T), ncol=2)
label.vec = c(rep("1",475), rep("2", 25))
Xb = rbind(X1,X2)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xb, type=1, alpha=.05)
score2 = outlier.score(Xb, type=1, alpha=.5)
score3 = outlier.score(Xb, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
par(mfrow=c(1,3))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
set.seed(11182014)
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+10, ncol=2)
Xa = rbind(X1,X2)
Xa = scale(Xa, center=T, scale=F)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xa, type=1, alpha=.05)
score2 = outlier.score(Xa, type=1, alpha=.5)
score3 = outlier.score(Xa, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(2,2))
plot(lm(stack.loss~., data=stackloss))
par(mfrow=c(1,1))
score.vec = outlier.score(as.matrix(stackloss[,-4]),
type=1, alpha=.8)
plot(score.vec, pch=19, cex=.5)
abline(h=quantile(score.vec,.9), lty=2, lwd=2)
# writeup plots
X = as.matrix(stackloss[,-4])
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
require(robustbase)
score.vec = outlier.score(as.matrix(hbk[,-4]),
type=1, alpha=.2)
plot(score.vec, pch=19, cex=.5)
#abline(h=quantile(score.vec,.9), lty=2, lwd=2)
# writeup plots
X = as.matrix(hbk[,-4])
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score"); abline(v=14, lty=2)
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score"); abline(v=14, lty=2)
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score"); abline(v=14, lty=2)
par(mfrow=c(1,1))
X = scale(as.matrix(stackloss[,-4]), center=T, scale=F)
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
X = scale(as.matrix(hbk[,-4]), center=T, scale=F)
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score"); abline(v=14, lty=2)
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score"); abline(v=14, lty=2)
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score"); abline(v=14, lty=2)
par(mfrow=c(1,1))
par(mfrow=c(1,3))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
set.seed(11182014)
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+10, ncol=2)
Xa = rbind(X1,X2)
Xa = scale(Xa, center=T, scale=F)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xa, type=1, alpha=.05)
score2 = outlier.score(Xa, type=1, alpha=.5)
score3 = outlier.score(Xa, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
par(mfrow=c(1,3))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+sample(c(6:10, -10:-6), 50, replace=T), ncol=2)
label.vec = c(rep("1",475), rep("2", 25))
Xb = rbind(X1,X2)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xb, type=1, alpha=.05)
score2 = outlier.score(Xb, type=1, alpha=.5)
score3 = outlier.score(Xb, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,2))
plot(Xa, main="Setup 1: clumped outliers",
col=cols, pch=19, cex=.5)
plot(Xb, main="Setup 2: scattered outliers",
col=cols, pch=19, cex=.5)
par(mfrow=c(1,1))
plot(Xa, main="Setup 1: clumped outliers",
col=cols, pch=19, cex=.5)
plot(Xb, main="Setup 2: scattered outliers",
col=cols, pch=19, cex=.5)
par(mfrow=c(2,2))
plot(lm(stack.loss~., data=stackloss))
par(mfrow=c(1,1))
# writeup plots
X = scale(as.matrix(stackloss[,-4]), center=T, scale=F)
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
X = scale(as.matrix(hbk[,-4]), center=T, scale=F)
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score"); abline(v=14, lty=2)
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score"); abline(v=14, lty=2)
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score"); abline(v=14, lty=2)
par(mfrow=c(1,1))
set.seed(11182014)
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+10, ncol=2)
Xa = rbind(X1,X2)
Xa = scale(Xa)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xa, type=1, alpha=.05)
score2 = outlier.score(Xa, type=1, alpha=.5)
score3 = outlier.score(Xa, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
par(mfrow=c(1,3))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+sample(c(6:10, -10:-6), 50, replace=T), ncol=2)
label.vec = c(rep("1",475), rep("2", 25))
Xb = rbind(X1,X2)
Xb = scale(Xb)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xb, type=1, alpha=.05)
score2 = outlier.score(Xb, type=1, alpha=.5)
score3 = outlier.score(Xb, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
par(mfrow=c(1,3))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
par(mfrow=c(2,2))
plot(lm(stack.loss~., data=stackloss))
par(mfrow=c(1,1))
# writeup plots
X = scale(as.matrix(stackloss[,-4]))
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
X = scale(as.matrix(hbk[,-4]), center=T, scale=F)
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score"); abline(v=14, lty=2)
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score"); abline(v=14, lty=2)
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score"); abline(v=14, lty=2)
par(mfrow=c(1,1))
X = scale(as.matrix(hbk[,-4]))
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score"); abline(v=14, lty=2)
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score"); abline(v=14, lty=2)
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score"); abline(v=14, lty=2)
par(mfrow=c(1,1))
X = scale(as.matrix(stackloss[,-4]))
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
set.seed(11182014)
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+10, ncol=2)
Xa = rbind(X1,X2)
Xa = scale(Xa)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xa, type=1, alpha=.05)
score2 = outlier.score(Xa, type=1, alpha=.5)
score3 = outlier.score(Xa, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
score1 = outlier.score(Xb, type=1, alpha=.05)
score2 = outlier.score(Xb, type=1, alpha=.5)
score3 = outlier.score(Xb, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
X1 = matrix(rnorm(950), ncol=2)
X2 = matrix(rnorm(50)+sample(c(6:10, -10:-6), 50, replace=T), ncol=2)
label.vec = c(rep("1",475), rep("2", 25))
Xb = rbind(X1,X2)
Xb = scale(Xb)
cols = c(rep("darkgreen",475), rep("darkred", 25))
# writeup plots
score1 = outlier.score(Xb, type=1, alpha=.05)
score2 = outlier.score(Xb, type=1, alpha=.5)
score3 = outlier.score(Xb, type=1, alpha=.95)
cols = c(rep("green",475), rep("red", 25))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
par(mfrow=c(1,2))
plot(Xa, main="Setup 1: clumped outliers",
col=cols, pch=19, cex=.5)
plot(Xb, main="Setup 2: scattered outliers",
col=cols, pch=19, cex=.5)
par(mfrow=c(1,1))
plot(score1, col=cols, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, col=cols, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, col=cols, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(2,2))
plot(lm(stack.loss~., data=stackloss))
par(mfrow=c(1,1))
# writeup plots
X = scale(as.matrix(stackloss[,-4]))
score1 = outlier.score(X, type=1, alpha=.05)
score2 = outlier.score(X, type=1, alpha=.5)
score3 = outlier.score(X, type=1, alpha=.95)
par(mfrow=c(1,3))
plot(score1, pch=19, cex=.8,
main="alpha=0.05", ylab="outlier score")
plot(score2, pch=19, cex=.8,
main="alpha=0.5", ylab="outlier score")
plot(score3, pch=19, cex=.8,
main="alpha=0.95", ylab="outlier score")
par(mfrow=c(1,1))
